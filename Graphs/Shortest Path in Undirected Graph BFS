class Solution {
    // Function to find the shortest path from a source node to all other nodes
    public int[] shortestPath(ArrayList<ArrayList<Integer>> adj, int src) {
        int size=adj.size();
        int dist[]=new int[size];
        Arrays.fill(dist, Integer.MAX_VALUE);
        dist[src]=0;
        Queue<Integer>q=new ArrayDeque<>();
        q.offer(src);
        while(!q.isEmpty()){
            int node=q.poll();
            for(int x:adj.get(node)){
                if((dist[node]+1)<dist[x]){
                dist[x]=dist[node]+1;
                q.offer(x);
                }
            }
        }
        
        for(int i=0; i<size; i++){
            if(dist[i]==Integer.MAX_VALUE){
                dist[i]=-1;
            }
        }
        
        return dist;
        
    }
}
